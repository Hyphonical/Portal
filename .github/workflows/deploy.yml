name: Build Docker images
# Workflow name displayed in the GitHub Actions UI.
permissions: # Grant minimal permissions required for this workflow:
  contents: read # read is needed to check out the repository code
  pull-requests: write # write is needed if the workflow interacts with pull requests (e.g., status updates)

on:
  push:
    branches: ["main"]
# Triggers the workflow on every push to the 'main' branch.

jobs:
  build-and-push-dockerfile-image:
    # A single job to build and push the Docker image.
    runs-on: ubuntu-latest

    # 1. Define an Environment for the job
    environment:
      # Sets the environment name, which can be used for deployment protection rules.
      name: production
      # Provides a URL link to the deployed application.
      url: https://portal.voidtales.win/

    steps:
      - name: ðŸ“¥ Checkout repo
        # Checks out your repository code so the job can access it.
        uses: actions/checkout@v3

      - name: ðŸ”§ Log in to Docker Hub
        # Logs in to Docker Hub using secrets for secure authentication.
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # Make sure to add the secrets in your repository in -> Settings -> Secrets (Actions) -> New repository secret
          password: ${{ secrets.DOCKERHUB_TOKEN }}    # Make sure to add the secrets in your repository in -> Settings -> Secrets (Actions) -> New repository secret

      - name: ðŸ”¨ Build and push Docker image
        # Builds the Docker image from your Dockerfile and pushes it to Docker Hub.
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          # Defines the image tags, including your Docker Hub namespace.
          tags: |
            inventory69/voidtales-portal:latest
          platforms: linux/amd64
      
      # Adds this step at the end of your existing workflow
      - name: ðŸš€ Trigger Dokploy Deployment
        # Triggers a new deployment by sending a POST request to the Dokploy API.
        id: 'laststep'
        run: |
            curl -X POST \
            -H "Authorization: Bearer ${{ secrets.DOKPLOY_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{ "image_tag": "inventory69/voidtales-portal:latest" }' \
            "${{ secrets.API_HOST }}/api/deploy/${{ secrets.DOKPLOY_APP_ID }}"
        env:
            DOKPLOY_API_TOKEN: ${{ secrets.DOKPLOY_API_TOKEN }}
            DOKPLOY_APP_ID: ${{ secrets.DOKPLOY_APP_ID }}